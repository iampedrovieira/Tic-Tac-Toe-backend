version: '3.8'

services:
  backend:
    build: ./back-end
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    depends_on:
      - postgres
    networks:
      - backend_network
    environment:
      - PORT=${PORT:-8080}
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=5432
      - NODE_ENV=${NODE_ENV:-production}
      - origin_cors=${origin_cors}
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: tictactoe-postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - backend_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  backend_network:
    driver: bridge